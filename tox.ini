[tox]
envlist = py3{7,8,9,10}-{linux,macos,windows},coverage
skip_missing_interpreters = true
isolated_build = true
skipsdist = true

[gh-actions]
python =
    3.7: py37
    3.8: py38
    3.9: py39
    3.10: py310

[gh-actions:env]
PLATFORM =
    ubuntu-20.04: linux
    macos-11: macos
    windows-2019: windows

[base]
deps =
    pip>=21.1
    versioningit

[build]
deps =
    pip>=21.1
    build
    twine

[testenv]
skip_install = true

passenv =
    DISPLAY
    XAUTHORITY
    HOME
    USERNAME
    USER
    XDG_*
    CI
    OS
    PYTHONIOENCODING
    PIP_DOWNLOAD_CACHE

setenv =
  PYTHONPATH={toxinidir}
  COVERAGE_FILE=.coverage.{envname}

allowlist_externals =
    bash

deps =
    {[base]deps}
    pytest
    pytest-cov
    -e .

commands =
    #asterisklint -V
    python -m pytest -v --cov asterisklint_hooks --cov-branch --cov-report term-missing {posargs:tests}

[testenv:coverage]
basepython =
    python3

skip_install =
    true

allowlist_externals =
    bash

deps =
    coverage

commands =
    bash -c 'coverage combine .coverage.py*'
    coverage xml

depends =
    py37
    py38
    py39
    py310

[coverage:run]
parallel=True

[testenv:lint]
passenv =
    CI
    OS
    PIP_DOWNLOAD_CACHE
    PYTHONIOENCODING

allowlist_externals =
    bash

deps =
    {[base]deps}
    pylint
    asterisklint

commands =
    pylint --fail-under=9.00 --ignore=_version.py asterisklint_hooks/ {posargs}

[testenv:build]
passenv =
    pythonLocation
    CI
    GITHUB*
    PYTHONIOENCODING
    PIP_DOWNLOAD_CACHE

allowlist_externals = bash

deps =
    {[build]deps}

commands =
    python -m build .
    twine check dist/*

[testenv:check]
skip_install = true

passenv =
    pythonLocation
    CI
    PYTHONIOENCODING
    PIP_DOWNLOAD_CACHE

allowlist_externals =
    bash

deps =
    pip>=21.2

commands =
    pip install asterisklint_hooks --pre --prefer-binary -f dist/
    python -c 'import pkg_resources; print(pkg_resources.get_distribution("asterisklint_hooks").version)'

[testenv:changes]
skip_install = true
allowlist_externals =
    {[testenv:check]allowlist_externals}

passenv =
    CI
    OS
    PIP_DOWNLOAD_CACHE
    VERSION

deps =
    {[base]deps}
    git+https://github.com/sarnold/gitchangelog.git@master

commands =
    bash -c 'gitchangelog {posargs} > CHANGELOG.rst'

[testenv:style]
passenv =
    CI
    OS
    PIP_DOWNLOAD_CACHE

deps =
    {[base]deps}
    flake8
    flake8-bugbear

commands =
    flake8 asterisklint_hooks/ {posargs}

[testenv:mypy]
skip_install = true

setenv = PYTHONPATH = {toxinidir}

deps =
    {[base]deps}
    asterisklint
    mypy

commands =
    python -m mypy --follow-imports=normal --install-types \
      --non-interactive asterisklint_hooks/ {posargs}

[testenv:black]
skip_install = true

setenv = PYTHONPATH = {toxinidir}

deps =
    {[base]deps}
    black

commands =
    black -v -S asterisklint_hooks/ {posargs}

[testenv:isort]
skip_install = true

setenv = PYTHONPATH = {toxinidir}

deps =
    {[base]deps}
    isort

commands =
    python -m isort asterisklint_hooks/ {posargs}

[testenv:sec]
skip_install = true
passenv =
    PYTHON
    CI
    OS
    PYTHONIOENCODING
    PIP_DOWNLOAD_CACHE

deps =
    {[base]deps}
    bandit

commands =
    bandit -r asterisklint_hooks/ {posargs}

[testenv:clean]
skip_install = true
allowlist_externals =
    bash

deps =
    pip>=21.2

commands =
    bash -c 'rm -rf build dist .coverage* coverage.xml *.egg-info'
